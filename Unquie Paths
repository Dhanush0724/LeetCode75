class Solution(object):
     def uniquePaths(self, m, n):  
    #     def f(i,j,dp):
    #         if i>=n or j>=m:
    #             return 0
    #         if i == n-1 and j == m-1:
    #             return 1
    #         if dp[i][j]!=-1:
    #             return dp[i][j]
    #         right = f(i,j+1,dp)
    #         down = f(i+1,j,dp)
    #         dp[i][j] = right+down
    #         return dp[i][j]
    #     dp = [[-1 for _ in range(m)] for i in range(n)]
    #     return f(0,0,dp)

        dp = [[1 for _ in range(m)] for _ in range(n)]

        for i in range(1,n):
            for j in range(1,m):
                dp[i][j] = dp[i-1][j] + dp[i][j-1]
        
        return dp[n-1][m-1]
        
