class Solution(object):
    def gcdOfStrings(self, str1, str2):
        """
        :type str1: str
        :type str2: str
        :rtype: str
        """
        # Check if concatenation in both orders is the same
        if str1 + str2 != str2 + str1:
            return ""

        # Find the gcd of the lengths of str1 and str2
        gcd_length = self.gcd(len(str1), len(str2))

        # Return the substring of str1 up to the gcd length
        return str1[:gcd_length]

    def gcd(self, a, b):
        while b:
            a, b = b, a % b
        return a

# Example usage
solution = Solution()
str1 = "ABCABC"
str2 = "ABC"
print(solution.gcdOfStrings(str1, str2))  # Output: "ABC"
