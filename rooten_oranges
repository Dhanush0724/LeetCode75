class Solution(object):
    def orangesRotting(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """
        from collections import deque
        
        if not grid or len(grid) == 0:
            return 0

        n = len(grid)
        m = len(grid[0])
        q = deque()
        fresh_orange = 0

        for i in range(n):
            for j in range(m):
                if grid[i][j] == 2:
                    q.append((i,j))
                elif grid[i][j] == 1:
                    fresh_orange+=1
                
        if fresh_orange == 0:
            return 0
        
        directions = [(1,0),(0,1),(-1,0),(0,-1)]
        minutes  = 0

        while q:
            for _ in range(len(q)):
                r,c = q.popleft()

                for dr,dc in directions:
                    nr ,nc = r+dr,c+dc

                    if 0<=nr<n and 0<=nc<m and grid[nr][nc] == 1:

                        grid[nr][nc] = 2
                        fresh_orange-=1
                        q.append((nr,nc))
            
            if q:
                    minutes+=1
        
        return minutes if fresh_orange == 0 else -1

            






        
            
            
